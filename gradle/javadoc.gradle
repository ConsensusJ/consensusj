ext.javadocSpec = {
    options.encoding = 'UTF-8'
    options.addBooleanOption 'html5', true

    options.addStringOption '-base-dir', "${projectDir}"
    options.addStringOption '-attribute',
            "name=${project.name}," +
            "version=${project.version}," +
            "title-link=http://consensusj.github.io/consensusj/[${project.name} ${project.version}]"
    options.addStringOption '-attribute', 'data-uri'
    options.addBooleanOption 'linksource', true             // include link to HTML source file

    def javaDocLinks = [
            "https://docs.oracle.com/en/java/javase/17/docs/api",
            "https://fasterxml.github.io/jackson-core/javadoc/2.13/",
            "https://fasterxml.github.io/jackson-databind/javadoc/2.13/"
    ]

    if (!bitcoinjVersion.contains("beta") && !bitcoinjVersion.contains("rc")) {
        javaDocLinks.add("https://bitcoinj.org/javadoc/${bitcoinjVersion}/".toString())
    }

    String[] linksArray = javaDocLinks.toArray(new String[]{})

    options.links(linksArray)
}

allprojects {
    javadoc javadocSpec
}

task javadocAll(type: Javadoc) {
    source subprojects.collect {project -> project.sourceSets.main.allJava }
    classpath = files(subprojects.collect {project -> project.sourceSets.main.compileClasspath})
}
javadocAll javadocSpec << {
    // TODO: Convert this back to HTML
    // options.overview = "doc/javadoc-overview.adoc"
    // inputs.file(options.overview)
}
javadocAll.doLast {
    logger.info "Consolidated JavaDoc generated at <file://${javadocAll.destinationDir}/index.html>"
}
