/*
 * CLI tool support library and `cj-bitcoin-cli` tool.
 * `jsonrpc` tool is compiled to a native command-line tool with Graal `native-image`
 */
plugins {
    id 'java-library'
    // Instead of using 'org.graalvm.buildtools.native' directly we need to include
    // the micronaut application plugin to avoid a Gradle bug:
    // See: https://github.com/micronaut-projects/micronaut-gradle-plugin/issues/706
    // and: https://github.com/gradle/gradle/issues/17559
    //id 'org.graalvm.buildtools.native' version '0.9.28'
    id("io.micronaut.application") version "${micronautAppGradlePluginVersion}"
}

tasks.withType(JavaCompile).configureEach {
    options.release = 21
}

configurations {
    nativeToolImplementation.extendsFrom implementation
}

dependencies {
    api project(':consensusj-jsonrpc')

    api 'commons-cli:commons-cli:1.6.0'

    // Add SLF4J runtime adapter for JDK logging for GraalVM native-image build of jsonrpc tool
    nativeImageClasspath "org.slf4j:slf4j-jdk14:${slf4jVersion}"

    testImplementation "org.apache.groovy:groovy:${groovyVersion}"

    testRuntimeOnly "org.slf4j:slf4j-jdk14:${slf4jVersion}"
}

ext.moduleName = 'org.consensusj.jsonrpc.cli'
def mainClassName = "org.consensusj.jsonrpc.cli.GenericJsonRpcTool"

jar {
    manifest {
        attributes  'Implementation-Title': 'ConsensusJ JSON-RPC CLI library and tool',
                    'Automatic-Module-Name': moduleName,
                    'Main-Class': mainClassName,
                    'Implementation-Version': archiveVersion.get()
    }
}

graalvmNative {
    binaries {
        main {
            mainClass = mainClassName
            imageName = 'jsonrpc'
        }
        test {
            imageName = 'jsonrpc-dbg'
        }
    }
    binaries.all {
        sharedLibrary = false
        buildArgs.add('--initialize-at-build-time=com.fasterxml.jackson.annotation.JsonProperty$Access')
        buildArgs.add('--verbose')
    }
}
