plugins {
    id "com.gradle.enterprise" version "3.1.1"
}

rootProject.name = 'consensusj'

include 'consensusj-currency',                  // JavaMoney Currency Provider(s)
        'consensusj-decentralized-id',          // W3C Decentralized ID library (in-process)
        'consensusj-exchange',                  // JavaMoney Exchange Providers
        'consensusj-jsonrpc',                   // JSON-RPC Java client
        'consensusj-jsonrpc-gvy',               // JSON-RPC Groovy client
        'cj-bitcoinj-util',                     // BlockUtil (and future stuff depending on only bitcoinj)
        'cj-bitcoinj-dsl-gvy',                  // Groovy DSL for bitcoinj
        'cj-bitcoinj-spock',                    // Spock tests/demos of basic bitcoinj capabilities
        'cj-btc-json',                          // JSON <-> Java Object mapping
        'cj-btc-jsonrpc',                       // Bitcoin JSON-RPC client using bitcoinj-based types
        'cj-btc-jsonrpc-gvy',                   // Bitcoin JSON-RPC client with Groovy dynamic method support
        'cj-btc-jsonrpc-integ-test',            // RPC-based integration tests of bitcoind
        'cj-eth-jsonrpc',                       // Ethereum JSON-RPC client (experimental)
        'cj-eth-jsonrpc-gvy',                   // Ethereum JSON-RPC client w/Groovy extensions (experimental)
        'cj-nmc-jsonrpc',                       // Namecoin JSON-RPC client (experimental)
        'cj-nmc-jsonrpc-gvy'                    // Namecoin JSON-RPC client w/Groovy extensions (experimental)

if (JavaVersion.current().isJava9Compatible()) {
    System.err.println "Including JDK 9 modules because Java ${JavaVersion.current()} is JDK 9+"
    include 'consensusj-rx-zeromq'              // RxJava 3 adapter for ZeroMQ (uses JeroMQ)
    include 'cj-btc-rx'                         // bitcoinj-based RxJava interfaces
    include 'cj-btc-rx-peergroup'               // bitcoinj-based RxJava (Transaction) implementation
    include 'cj-btc-zeromq'                     // bitcoind ZeroMQ client
} else {
    System.err.println "Skipping JDK 9 modules, requires Java 9+, currently running Java ${JavaVersion.current()}"
}

if (JavaVersion.current().isJava11Compatible()) {
    System.err.println "Including JDK 11 modules because Java ${JavaVersion.current()} is JDK 11+"
    include 'consensusj-analytics'              // Reactive analytics libraries
    include 'consensusj-jsonrpc-cli'            // JSON-RPC CLI library and tool
    include 'consensusj-jsonrpc-daemon'         // JSON-RPC sample server
    include 'cj-btc-cli'                        // Bitcoin JSON-RPC CLI
    include 'cj-btc-daemon'                     // Prototype Micronaut version of Bitcoin daemon
    include 'cj-btc-services'                   // bitcoinj-based service objects
} else {
    System.err.println "Skipping JDK 11 modules, requires Java 11+, currently running Java ${JavaVersion.current()}"
}

if (JavaVersion.current().compareTo(JavaVersion.VERSION_17) >= 0) {
    System.err.println "Including JDK 17 module because Java ${JavaVersion.current()} is JDK 17+"
    include 'cj-bitcoinj-dsl-js'                // JavaScript DSL for bitcoinj via Nashorn
} else {
    System.err.println "Skipping 'cj-bitcoinj-dsl-js', requires Java 17+, currently running Java ${JavaVersion.current()}"
}

