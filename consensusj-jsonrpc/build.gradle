plugins {
    id 'java-library'
}

configurations {
    nativeSampleImplementation.extendsFrom implementation
}

dependencies {
    api "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    // Add SLF4J runtime adapter for JDK logging for GraalVM native-image build of MathService/Tool
    nativeSampleImplementation "org.slf4j:slf4j-jdk14:${slf4jVersion}"

    testImplementation "org.apache.groovy:groovy:${groovyVersion}"
    testImplementation ("org.apache.groovy:groovy-json:${groovyVersion}") {
        transitive = false
    }

    testRuntimeOnly "org.slf4j:slf4j-jdk14:${slf4jVersion}"
}

ext.moduleName = 'org.consensusj.jsonrpc'
def mainClassName = "org.consensusj.jsonrpc.introspection.sample.MathService"

jar {
    inputs.property("moduleName", moduleName)
    manifest {
        attributes  'Implementation-Title': 'ConsensusJ JSON-RPC Client',
                'Automatic-Module-Name': moduleName,
                'Main-Class': mainClassName,
                'Implementation-Version': archiveVersion.get()
    }
}

test {
    testLogging.showStandardStreams = true
    systemProperty 'java.util.logging.config.file', "${project.projectDir}/src/test/logging.properties"
    beforeTest { descriptor ->
        logger.lifecycle('    ' + descriptor.getName())
    }
}

// Compile a native image of the MathService tool sample using Graal's native-image tool
// Graal must be installed at $JAVA_HOME
task nativeCompile(type:Exec, dependsOn: jar) {
    workingDir = projectDir
    executable = "${System.env.JAVA_HOME}/bin/native-image"
    args = [ '--verbose',
             '--no-fallback',
             '-cp', "${-> configurations.nativeSampleImplementation.asPath}", // Lazy configuration resolution
             '-jar', jar.archiveFile.get(),
             '-H:Path=build',
             '-H:Name=MathTool',
             '-H:+AllowIncompleteClasspath',
             '-H:+ReportUnsupportedElementsAtRuntime',
             '-H:+ReportExceptionStackTraces'
    ]
}
