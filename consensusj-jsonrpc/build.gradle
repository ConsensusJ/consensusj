plugins {
    id 'java-library'
    // Instead of using 'org.graalvm.buildtools.native' directly we need to include
    // the micronaut application plugin to avoid a Gradle bug:
    // See: https://github.com/micronaut-projects/micronaut-gradle-plugin/issues/706
    // and: https://github.com/gradle/gradle/issues/17559
    //id 'org.graalvm.buildtools.native' version '0.9.28'
    id("io.micronaut.application") version "${micronautAppGradlePluginVersion}"
}

configurations {
    nativeSampleImplementation.extendsFrom implementation
}

dependencies {
    api "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    // Add SLF4J runtime adapter for JDK logging for GraalVM native-image build of MathService/Tool
    nativeImageClasspath "org.slf4j:slf4j-jdk14:${slf4jVersion}"

    testImplementation project(':cj-btc-jsonrpc')

    testImplementation "org.apache.groovy:groovy:${groovyVersion}"
    testImplementation ("org.apache.groovy:groovy-json:${groovyVersion}") {
        transitive = false
    }

    testRuntimeOnly "org.slf4j:slf4j-jdk14:${slf4jVersion}"
}

ext.moduleName = 'org.consensusj.jsonrpc'
def mainClassName = "org.consensusj.jsonrpc.introspection.sample.MathService"

jar {
    inputs.property("moduleName", moduleName)
    manifest {
        attributes  'Implementation-Title': 'ConsensusJ JSON-RPC Client',
                'Automatic-Module-Name': moduleName,
                'Main-Class': mainClassName,
                'Implementation-Version': archiveVersion.get()
    }
}

test {
    testLogging.showStandardStreams = true
    systemProperty 'java.util.logging.config.file', "${project.projectDir}/src/test/logging.properties"
    beforeTest { descriptor ->
        logger.lifecycle('    ' + descriptor.getName())
    }
}

graalvmNative {
    binaries {
        main {
            mainClass = mainClassName
            imageName = 'MathTool'
        }
        test {
            imageName = 'MathTool-dbg'
        }
    }
    binaries.all {
        sharedLibrary = false
        buildArgs.add('--verbose')
    }
}
